from random import randint
import time
import click

MARGHERICA_RECIPE = {
    'tomato sauce': 1,
    'mozzarella': 1,
    'tomatoes': 1,
}
PEPPERONI_RECIPE = {
    'tomato sauce': 1,
    'mozzarella': 1,
    'pepperoni': 1,
}
HAWAIIAN_RECIPE = {
    'tomato sauce': 1,
    'mozzarella': 1,
    'chicken': 1,
    'pineapples': 1,
}
MENU = {
    'MARGHERICA üßÄ': MARGHERICA_RECIPE,
    'PEPPERONI üçï': PEPPERONI_RECIPE,
    'HAWAIIAN üçç': HAWAIIAN_RECIPE,
}


def make_xl_recipe(ingr):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–µ–ª–∞–µ—Ç –∏–∑ —Ä–µ—Ü–µ–ø—Ç–∞ –ø–∏—Ü—Ü—ã —Ä–µ—Ü–µ–ø—Ç –±–æ–ª—å—à–æ–π –ø–∏—Ü—Ü—ã, —É–º–Ω–æ–∂–∞—è –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç—ã –Ω–∞ –¥–≤–∞
    """
    xl_recipe = ingr.copy()
    for key in xl_recipe:
        xl_recipe[key] *= 2
    return xl_recipe


class Pizza():
    """
     –ö–ª–∞—Å—Å –ø–∏—Ü—Ü–∞, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥—É—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è –≤—Å–µ –ø—Ä–æ—á–∏–µ –ø–∏—Ü—Ü—ã
    """
    def __init__(self, ingr: dict = {}, size: str = 'L'):
        if size.upper() in ('L', 'XL'):
            self.size = size.upper()
        else:
            raise ValueError(f'Size {size} is not available')
        if size == 'L':
            self.ingr = ingr
        elif size == 'XL':  # –µ—Å–ª–∏ –ø–∏—Ü—Ü–∞ –±–æ–ª—å—à–∞—è, —Ç–æ —Ä–µ—Ü–µ–ø—Ç —É–¥–≤–∞–∏–≤–∞–µ—Ç—Å—è
            self.ingr = make_xl_recipe(ingr)

    def dict(self):
        """
        –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –≤–≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è
        """
        return self.ingr

    def __eq__(self, other):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–∏—Ü—Ü—ã –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ. –ü–∏—Ü—Ü—ã —Ä–∞–≤–Ω—ã, –µ—Å–ª–∏ —É –Ω–∏—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–≤–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã
        """
        return self.ingr == other.ingr


class Margherita(Pizza):
    def __init__(self, ingr: dict = MARGHERICA_RECIPE, size: str = 'L'):
        super().__init__(ingr, size)


class Pepperoni(Pizza):
    def __init__(self, ingr: dict = PEPPERONI_RECIPE, size: str = 'L'):
        super().__init__(ingr, size)


class Hawaiian(Pizza):
    def __init__(self, ingr: dict = HAWAIIAN_RECIPE, size: str = 'L'):
        super().__init__(ingr, size)


@click.group()
def cli():
    pass


@cli.command()
@click.option('--delivery_flg', default=False, is_flag=True)
@click.option('--big_flg', default=False, is_flag=True)
@click.argument('pizza', nargs=1)
def order(pizza: str, delivery_flg: bool, big_flg: bool):
    """–ì–æ—Ç–æ–≤–∏—Ç –∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""
    if big_flg:
        size = 'XL'
    else:
        size = 'L'
    if pizza == 'pepperoni':
        order_pizza = Pepperoni(size=size)
    elif pizza == 'margherita':
        order_pizza = Margherita(size=size)
    elif pizza == 'hawaiian':
        order_pizza = Hawaiian(size=size)
    bake(order_pizza)
    if delivery_flg:
        delivery(order_pizza)
    else:
        pickup(order_pizza)


@cli.command()
def menu():
    """–í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é"""
    for pizza in MENU:
        ing_str = ', '.join(list(MENU[pizza].keys()))
        print(f'{pizza}: {ing_str}')


def log(tag: str = None):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π (–º–æ–∂–Ω–æ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º, –∞ –º–æ–∂–Ω–æ –±–µ–∑) –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä
    –ü–µ—á–∞—Ç–∞–µ—Ç –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
    –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º tag –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–≥–æ –¥–ª—è –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
    """
    def outer_wrapper(func):
        def inner_wrapper(pizza: Pizza):
            start_time = time.time()
            func(pizza)
            finish_time = time.time() - start_time
            if tag is None:
                print(f'{func.__name__} - {finish_time}c!')
            else:
                print(tag.format(finish_time))

        return inner_wrapper

    return outer_wrapper


@log('üç≥ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {}—Å!')
def bake(pizza: Pizza):
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""
    time.sleep(randint(1, 5))


@log('üõµ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {}—Å!')
def delivery(pizza: Pizza):
    """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""
    time.sleep(randint(1, 5))


@log('üè° –ó–∞–±—Ä–∞–ª–∏ –∑–∞ {}—Å!')
def pickup(pizza: Pizza):
    """–°–∞–º–æ–≤—ã–≤–æ–∑"""
    time.sleep(randint(1, 5))


if __name__ == '__main__':
    cli()
